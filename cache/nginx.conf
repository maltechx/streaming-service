events {}
http {
    proxy_cache_path  /var/www/cache/cache levels=1:2 keys_zone=cache-cache:8m max_size=10G inactive=600m;
    proxy_temp_path /var/www/cache/tmp 1 2;
    resolver 8.8.8.8;
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        return 301 https://$host$request_uri;
    }
    server {
        listen 443 ssl http2;
	listen [::]:443 ssl http2;
        ssl_certificate     /certs/fullchain.cer;
        ssl_certificate_key /certs/cert.key;
	ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;
	
	ssl_dhparam /certs/dhparam;
	
	# intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
	
	# HSTS (ngx_http_headers_module is required) (63072000 seconds)
	add_header Strict-Transport-Security "max-age=63072000" always;


        #server_name example.com;

	location / {
	  alias /var/www/html/$1;
	  index index.html;
	}
	

        location /live/ {
            proxy_pass https://ingest.example.com/live/;
            proxy_cache hls-test1-cache;
            proxy_cache_valid 200 10m;
            proxy_cache_valid 404 5s;
	    proxy_cache_lock on;
	    proxy_ignore_headers Expires Cache-Control;
	    proxy_ignore_client_abort on;
	    
            # Only for debug purposes
            #add_header "X-Hls-Cache-Status" "Cached TS";
	    #add_header X-Cache-Status $upstream_cache_status; 
            location ~ \.(m3u8)$ {
                proxy_pass https://ingest.example.com$request_uri;
		proxy_ignore_client_abort on;
		proxy_cache off;
                # Only for debug purposes
                #add_header "X-Hls-Cache-Status" "Fresh data";
		#add_header Cache-Control no-cache;
        }   
        }
    }
}
